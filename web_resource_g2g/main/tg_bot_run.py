import asyncio
import os
from aiogram import Bot
from aiogram.exceptions import TelegramNetworkError
from dotenv import load_dotenv

from main.utils.logger_config import logger

load_dotenv()
BOT_TOKEN = os.getenv('TG_TOKEN')
admins_tgs = {'Vlad': 190861163, 'Vitaliy': 822070279}


async def send_messages_to_users(seller_tg, seller_name, message):
    bot = Bot(token=BOT_TOKEN)
    recipients = admins_tgs.copy()  # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ø—ñ—é —Å–ª–æ–≤–Ω–∏–∫–∞, —â–æ–± –Ω–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª

    if seller_tg != admins_tgs['Vitaliy']:
        recipients.update({seller_name: seller_tg})

    try:
        for name, tg in recipients.items():
            await bot.send_message(chat_id=tg, text=message)
            logger.warning(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –¥–æ {name}")
            await asyncio.sleep(2)
        return True
    except TelegramNetworkError as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ: {e}")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
    finally:
        await bot.session.close()


def send_messages_sync(seller_tg, seller_name, message):
    """ –í–∏–∫–ª–∏–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó –∑ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥—É """
    response = asyncio.run(send_messages_to_users(seller_tg, seller_name, message))
    return True if response else False


# üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
if __name__ == "__main__":
    test_message = "–¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"
    test_seller_id = 123456789  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π ID –ø—Ä–æ–¥–∞–≤—Ü—è
    send_messages_sync(test_seller_id, 'test_name',  test_message)

